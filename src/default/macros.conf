[response_time_threshold]
definition = 1000

[timesince(2)]
args = sourceField,destField
definition = eval now=time() | eval $destField$ = case( $sourceField$ > now, "0 minutes ago", now-$sourceField$ > (2*86400), round((now-$sourceField$) / (86400)) . " days ago", now-$sourceField$ > (2*3600), round((now-$sourceField$) / (3600)) . " hours ago", now-$sourceField$ > (2*60), round((now-$sourceField$) / (60)) . " minutes ago", now-$sourceField$ > 60, "1 minute ago", now-$sourceField$ <= 60, "just now" ) | fields - now
iseval = 0

[duration(3)]
args = startField,endField,destField
definition = eval $destField$ = case( $startField$ > $endField$, "0 minutes", $endField$-$startField$ > (2*86400), round(($endField$-$startField$) / (86400)) . " days", $endField$-$startField$ > (2*3600), round(($endField$-$startField$) / (3600)) . " hours", $endField$-$startField$ > (2*60), round(($endField$-$startField$) / (60)) . " minutes", $endField$-$startField$ > 60, "1 minute", $endField$-$startField$ <= 60, "< a minute" )
iseval = 0

[format_events]
definition = eval time=_time | eval response_time=total_time | convert ctime(time) | fillnull response_code value="Connection failed" | eval response_code=if(timed_out == "True", "Connection timed out", response_code) | fields - _raw _time | fields time response_code response_time

[format_events_raw]
definition = eval time=_time | eval response_time=total_time | convert ctime(time) | fillnull response_code value="Connection failed" | eval response_code=if(timed_out == "True", "Connection timed out", response_code)

[format_events_ex]
definition = eval time=_time | eval response_time=total_time | convert ctime(time) | fillnull response_code value="Connection failed" | eval response_code=if(timed_out == "True", "Connection timed out", response_code) | fields - _raw _time | fields time title url response_code response_time

[filter_inoperable]
definition = (response_code>=400 OR timed_out="True" OR NOT response_code="*")

[filter_disabled]
definition = | join source [| rest /services/data/inputs/web_ping | search disabled=0 | fields title id url | rex field=id ".*[/](?<name>[^/]*)" | eval name=urldecode(name) | eval source="web_ping://".urldecode(name)]
